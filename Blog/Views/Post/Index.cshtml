@* @using Blog.Controllers *@
<!--ТУТ ВСЕ ОК-->
@model Post
@{
    ViewBag.Title = Model.Title;
    ViewBag.Description = Model.Description;
    <!--Если поле Tags? означает что оно потенциально = null, а если Tag!= null, то применяем Replace-->
    ViewBag.Keywords = $"{Model.Tags?.Replace(",", " ")} {Model.Category}";
    var base_path = Context.Request.PathBase;
}


<!-- Подключение шрифта roboto --->
<!--
<link rel="preconnect" href="https://fonts.googleapis.com">
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
<link href="https://fonts.googleapis.com/css2?family=Roboto:wght@300&display=swap" rel="stylesheet">
--->
<link href="~/css/Post.css" rel="stylesheet" />
<link rel="stylesheet" href="~/css/MainComment.css" />
<!-- Динамические -->
<link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Material+Symbols+Rounded:opsz,wght,FILL,GRAD@20..48,100..700,0..1,-50..200" />
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
<!-- Статические -->
<!-- <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Material+Symbols+Rounded:opsz,wght,FILL,GRAD@24,300,0,0" /> -->
@*




<script>
    function SendCommentSection(mainCommentId) {

        const el = document.getElementById(`sendCommentWrapper(${mainCommentId})`);
        console.log(el);
    }</script> *@
@*
<div>
    <script type="text/javascript">
        $(document).ready(function () {
            $.get("/Post/GetDataFromView", { postId: @Model.Id})
        });
    </script>
</div>
*@
<span id="IsAuthenticated" style="display: none; overflow: hidden;">@User.Identity.IsAuthenticated</span>

<div class="post">

    <div class="main-image">

        @if (!String.IsNullOrEmpty(Model.ImageName))
        {
            //var image_path = $"/Image/{Model.Image}";
            var image_path = $"{base_path}/Image/{Model.ImageName}";
            <img src="@image_path" />
            <span class="title">@Model.Title</span>
        }
    </div>

    <div class="text-section">
        @*<span id="mainText">@Model.Body</span>*@
        @Html.Raw(Model.Body) <!--Отображаем тело записи из БД под фото-->
    </div>

    @*@if (User.Identity.IsAuthenticated)
    // Если пользователь авторизовался, то он может создать комментарий
    {*@

    <div class="comments-section">



        <h1 id="comments-title">Комментарии</h1>
        @{
            <div class="sendComment" id="sendCommentWrapper(0)">

                @* <iframe id="myframe" onload="SendCommentSection(0)" style="display: none;" />  *@
                @*
            <script>
            $(function () {//from   w ww  .j  a v a2s . c o m
            var div = '<div onload="SendCommentSection()">Here</div>';
            $("#dynamic").html(div);
            $('div[onload]').trigger('onload');
            });
            </script>@*
            @* Подгружаем MainComment.cshtml *@
                @{

                    // <script type="text/javascript">
                    //     var element = this.querySelector()
                    //     oQuickReply.swap('somid');
                    // </script>

                    await Html.RenderPartialAsync("MainComment",
                    new CommentViewModel { PostId = Model.Id, MainCommentId = 0 });
                }
            </div>
        }

        @foreach (var c in Model.MainComments)
        {
            //var timeDifference = DateTime.Now - c.Created;

            <div class="comment" id="comment(@c.Id)">
                <label>
                    @* @c.Author <span id="creationTime">@timeDifference</span> *@
                    @c.Author <span id="creationTime">
                        <script type="text/javascript">
                            $(document).ready(function () {
                                $.get("/Post/ShowTimeDifference", { postId: '@Model.Id', mainCommentId: '@c.Id', subCommentId: '-1' },
                                    function (text) {
                                        var el = document.getElementById(`comment(${@c.Id})`);
                                        el.querySelector("#creationTime").textContent = text;
                                        console.log(text)
                                    })
                            });
                        </script>
                    </span>
                    @*Comment Author`s name --- @c.Created *@
                </label>
                <div class="comment-text">
                    @*Если длина комментария более 400 символов, тогда выводим только 400, иначе весь коммент*@

                    @{
                        //string str = "";

                        if (c.Message.Length > 400)
                        {
                            foreach (char s in c.Message.Take(400))
                                @s
                            ;

                            <span class="dots" id="dots(@c.Id)">...</span>
                            <span class="moreText" id="moreText(@c.Id)">
                                @foreach (char s in c.Message.Skip(400))
                                    @s

                            </span>
                            <br />
                            <span class="readMoreBut" id="readMoreBut(@c.Id)" onclick="ReadMoreOrLess(@c.Id, 1)">Читать далее</span>
                        }
                        else
                        {
                            @c.Message
                            ;
                        }
                    }

                    <div class="popup">
                        <div class="popuptext" id="myPopup">
                            <p>Авторизуйтесь, чтобы оставить реакцию</p>
                            <a asp-action="Login" asp-controller="Auth">Вход</a>
                        </div>
                    </div>
                </div>
                @{
                    int likeReaction = 0;
                    int dislikeReaction = 0;

                    foreach (var ar in c.AuthorReactions)
                    {
                        if (User.Identity.IsAuthenticated && ar.ReactionAuthor == User.Identity.Name)
                        {
                            Func<bool, int> BoolToInt = b => (b == false) ? 0 : 1;

                            likeReaction = BoolToInt(ar.LikeReaction);
                            dislikeReaction = BoolToInt(ar.DislikeReaction);
                            //if (ar.LikeReaction == false) likeReaction = 0;
                            //else if()
                            //likeReaction = ar.LikeReaction;
                            //dislikeReaction = ar.DislikeReaction;
                        }
                    }
                }
                <div class="undercomment-buttons" id="undercomment-buttons(@c.Id)">

                    @*
                <div class="popup">
                <div class="popuptext" id="myPopup">
                <p>Авторизуйтесь, чтобы оставить реакцию</p>
                <a asp-action="Login" asp-controller="Auth">Вход</a>
                </div>
                </div>*@

                    @* <span id="like" class="material-symbols-outlined" onclick="Increment('@Model.Id', '@c.Id', 'true');">thumb_up</span>@c.LikesCount *@
                    <span id="like" class="material-symbols-rounded" onclick="ChangeReactionsCount('@Model.Id', '@c.Id', 'true');">thumb_up</span>
                    <span id="likesCount" data-likes-count="@likeReaction">@c.LikesCount</span>

                    <span id="dislike" class="material-symbols-rounded" onclick="ChangeReactionsCount('@Model.Id', '@c.Id' , 'false');">thumb_down</span>
                    <span id="dislikesCount" data-dislikes-count="@dislikeReaction">@c.DislikesCount</span>

                    <span id="answer" onclick="ShowSendCommentSection(@c.Id)">Ответить</span>

                    @* <div id="sendCommentWrapper"> *@
                </div>
                <div class="sendComment" id="sendCommentWrapper(@c.Id)">
                    @* <iframe id="myframe" onload="SendCommentSection(@c.Id)" style="display: none;"/> *@


                    @{
                        // bool likeReaction = false;
                        // bool dislikeReaction = false;

                        // foreach(var ar in c.AuthorReactions)
                        // {
                        //     if (User.Identity.IsAuthenticated && ar.ReactionAuthor == User.Identity.Name)
                        //     {
                        //         likeReaction = ar.LikeReaction;
                        //         dislikeReaction = ar.DislikeReaction;
                        //     }
                        // }
                        // <span id="wasLiked">@likeReaction</span>
                        // <span id="wasDisliked">@dislikeReaction</span>

                        await Html.RenderPartialAsync("MainComment",
                        new CommentViewModel { PostId = Model.Id, MainCommentId = c.Id });
                    }
                </div>

                @if (c.SubComments.Count > 0)
                {
                    var count = @c.SubComments.Count;
                    <button class="show-answers-but" id="showAnswersBut">@count @DetermineEnding(@count)</button>

                    <div class="subcomments">

                        @foreach (var sc in c.SubComments)
                        {
                            <div class="subcomment" id="subcomment(@sc.Id)">
                                <label>
                                    @* @c.Author <span id="creationTime">@timeDifference</span> *@
                                    @sc.Author <span id="creationTime">
                                        <script type="text/javascript">
                                            $(document).ready(function () {
                                                $.get("/Post/ShowTimeDifference", { postId: '@Model.Id', mainCommentId: '@c.Id', subCommentId: '@sc.Id' },
                                                    function (text) {
                                                        var el = document.getElementById(`subcomment(${@sc.Id})`);
                                                        el.querySelector("#creationTime").textContent = text;
                                                        console.log(text);
                                                    })
                                            });
                                        </script>
                                    </span>
                                    @*Comment Author`s name --- @c.Created *@
                                </label>

                                <div class="comment-text">
                                    @{
                                        if (sc.Message.Length > 400)
                                        {
                                            foreach (char s in sc.Message.Take(400))
                                            {
                                                @s
                                                ;
                                            }

                                            <span class="dots" id="dots(@sc.Id)">...</span>
                                            <span class="moreText" id="moreText(@sc.Id)">
                                                @foreach (char s in sc.Message.Skip(400))
                                                {
                                                    @s
                                                    ;
                                                }

                                            </span>
                                            <br />
                                            <span class="readMoreBut" id="readMoreBut(@sc.Id)" onclick="ReadMoreOrLess(@sc.Id, 0)">Читать далее</span>
                                        }
                                        else
                                        {
                                            @sc.Message
                                            ;
                                        }
                                    }
                                </div>
                            </div>
                        }
                    </div>

                    //await Html.RenderPartialAsync("MainComment",
                    //new CommentViewModel { PostId = Model.Id, MainCommentId = c.Id });

                }

                @*

            @{
            await Html.RenderPartialAsync("MainComment",
            new CommentViewModel { PostId = Model.Id, MainCommentId = c.Id });
            }

            *@
            </div>
            //<div class="subcomment" style="margin-left: 30px;">
            //    @foreach (var sc in c.SubComments)
            //    {
            //        <p>
            //            @sc.Message --- @sc.Created
            //        </p>
            //    }
            //</div>
        }

    </div>
    @*
    }
    else
    {
    <div>
    <a asp-action="Login" asp-controller="Auth">Авторизироваться</a>, чтобы оставить комментарий
    </div>
    }*@
</div>

@functions {
    string DetermineEnding(int number)
    {
        string ending = "ответ";
        string numberStr = number.ToString();

        List<char> Aending = new List<char>() { '2', '3', '4' };
        List<char> OVending = new List<char>() { '0', '5', '6', '7', '8', '9' };

        if (Aending.Contains(numberStr[^1])) { ending += "а"; }
        if (number != 1 && (numberStr.EndsWith("11") || OVending.Contains(numberStr[^1]))) { ending += "ов"; }

        return ending;
    }
}

<script>
    function SendCommentSection(mainCommentId) {

        const el = document.getElementById(`sendCommentWrapper(${mainCommentId})`);
        console.log(el);
    }</script>

<script src="~/js/Post.js"></script>
<script src="~/js/MainComment.js"></script>
@* <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script> *@

@*
<script>
    function ShowSendCommentSection(@MainComment? c) {
         $("#answer").html('@ShowSendCommentSection(c)');
    }
</script> *@
@*
@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
} *@
